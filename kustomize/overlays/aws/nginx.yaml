apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: whoami-demo
  labels:
    app: nginx-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-app
  template:
    metadata:
      labels:
        app: nginx-app
    spec:
      containers:
        - name: nginx
          image: public.ecr.aws/nginx/nginx:1.21
          envFrom:
            - configMapRef:
                name: example-config # This value is updated to match the generated name for the generated configmap
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - name: http
              containerPort: 80
          imagePullPolicy: IfNotPresent

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: whoami-demo
  labels:
    app: nginx-app
spec:
  # type: LoadBalancer
  type: NodePort
  selector:
    app: nginx-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: whoami-demo
#   name: ingress-nginx-demo
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     # alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
#     # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}]'
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
#     external-dns.alpha.kubernetes.io/hostname: trentdemo2.zudello.net

# spec:
#   tls:
#     - hosts:
#         - trentdemo2.zudello.net
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: nginx-service
#                 port:
#                   number: 80
